<local:CustomWindow x:Class="PL.DroneWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL"
        mc:Ignorable="d"
        Title="DroneWindow" Height="450" Width="800">


    <Window.Resources >
        <Style  x:Key="u" TargetType="TextBox">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsEnabledUpdate}" Value="True" >
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HiddenStyleTBX" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TextBox">
                                <Border Background="LightGray" BorderBrush="Gray" BorderThickness="1">
                                    <TextBlock Text="{TemplateBinding Text}" Padding="2" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HiddenStyleTB" TargetType="TextBlock">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="Gray">
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key ="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Justify"/>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="FontFamily" Value="Constantia"/>
            <Setter Property="Padding" Value="0, 10, 0 , 0"></Setter>
        </Style>

        <Style x:Key="textboxStyle" TargetType="TextBox" BasedOn="{StaticResource HiddenStyleTBX}" >
            <Setter Property="TextWrapping" Value="Wrap"></Setter>
            <!--<Setter Property="TextDecorations" Value="Underline"></Setter>-->
        </Style>


        <Style x:Key="HiddenStyle" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TextBox">
                                <Border Background="LightGray" BorderBrush="Gray" BorderThickness="1">
                                    <TextBlock Text="{TemplateBinding Text}" Padding="2" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="brush1" TargetType="TextBox"   BasedOn="{StaticResource textboxStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseDirectlyOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush>
                                <GradientStop Offset="0.3" Color="Blue"/>
                                <GradientStop Offset="0.7" Color="Red"></GradientStop>
                                <GradientStop Offset=" 0.1" Color="Green"></GradientStop>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonEnable" TargetType="Button">
            <Style.Triggers>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=idTx, Path=Text}" Value=""></Condition>
                        <Condition Binding="{Binding ElementName=sTx, Path=Text}" Value=""></Condition>
                        <Condition Binding="{Binding ElementName=mTx, Path=Text}" Value=""></Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="IsEnabled" Value="False"></Setter>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="UpdateEnable" TargetType="Button">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedIndex, ElementName=ComboUpdateOption}" Value="-1" >
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <!--<Condition Binding="{Binding ElementName=sTx, Path=Text}" Value=""></Condition>
                <MultiDataTrigger.Setters>
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </MultiDataTrigger.Setters>-->
            </Style.Triggers>
        </Style>

        <Style x:Key="AddminutesEnable" TargetType="TextBox">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=ComboUpdateOption, Path= SelectedIndex}" Value="2" >

                    <Setter Property="IsReadOnly" Value="False"/>
                    <Setter Property="Visibility"  Value="Visible"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="AddminutesTextBlockEnable" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Hidden" />
            <!--<Setter Property="Text" Value="Enter Search Term Here"></Setter>-->
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=ComboUpdateOption, Path= SelectedIndex}" Value="2" >
                    <Setter Property="Visibility" Value="Visible" />
                    <!--<Setter Property="Text" Value="Enter number of minutes"></Setter>-->
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--<Style x:Key="txtbxEnable" TargetType="TextBox" BasedOn="{StaticResource textboxStyle}">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers >
                <DataTrigger Binding="{Binding Path=choice}" Value="add"
            </Style.Triggers>
        </Style>-->

    </Window.Resources>



    <Grid>

        <Grid x:Name="addGrid" ShowGridLines="True" Visibility="Hidden">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>


            <Label  x:Name="DroneAddLabel" Content="Add drone" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                      
                    FontWeight="Bold"/>

            <TextBlock Name="idTbAdd" Text="DroneId"
                   Grid.Column="1" Grid.Row="1" Style="{StaticResource TextBlockStyle}"/>
            <TextBlock Name="wTbAdd" Grid.Row="2" Grid.Column="1" Style="{StaticResource TextBlockStyle}"
                    Text="WeightCategory"/>
            <TextBlock Name="sTbAdd" Grid.Row="3" Grid.Column="1" Style="{StaticResource TextBlockStyle}"
                    Text="StationId first charging"/>

            <Button Name="sumbitAdd"  
                Grid.Row="9" 
                Grid.Column="1" 
                Content="Add drone"
                Click="submit_Click" 
                Margin="9,10,10,10"
                Style="{StaticResource ButtonEnable}">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5" />
                    </Style>
                </Button.Resources>
            </Button>
            <Button Name="cancelAdd" 
                 Content="Cancel"
                IsCancel="True"
                Grid.Row="9" 
                Grid.Column="2" 
                Margin="9,10,10,10" Click="cancel_Click" >
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </Button.Resources>
            </Button>

        </Grid>





        <Grid x:Name="UpdateGrid" ShowGridLines="False" IsEnabled="True"
         Visibility="Visible" >

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid x:Name="parcelGrid" Grid.Column="4" Grid.RowSpan="15" Visibility="Hidden" Grid.ColumnSpan="6" Margin="0,0,213,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Name="ParcelInTrans" Text="Parcel" Grid.Row="1" Grid.Column="0" FontFamily="Constantia" FontSize="25" FontWeight="Bold" HorizontalAlignment="Left" Grid.ColumnSpan="5"/>
                <TextBlock Name="packId" Text="parcel Id:" Grid.Column="0" Grid.Row="2" Style="{StaticResource TextBlockStyle}" FontSize="12" />
                <TextBlock Name="packPrior" Text="Parcel Priority:" Grid.Column="0" Grid.Row="3" Style="{StaticResource TextBlockStyle}" FontSize="12" Height="24" VerticalAlignment="Top"/>
                <TextBlock Name="packStat" Text="Parcel status:" Grid.Column="0" Grid.Row="4" Style="{StaticResource TextBlockStyle}" FontSize="12"  />
                <TextBlock Name="packDis" Text="Distance:" Grid.Row="5" Style="{StaticResource TextBlockStyle}" FontSize="12" Grid.ColumnSpan="2"/>
                <Button Name="senderButton" Content="Sender" Grid.Row="5"  FontSize="12"  Background="LightBlue" BorderBrush="White" HorizontalAlignment="Left" FontFamily="Constantia" FontWeight="Bold" Click="senderButton_Click" Margin="0,36,0,0" Grid.RowSpan="2" Width="63">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10" />
                        </Style>
                    </Button.Resources>
                </Button>
                <Button Name="receiverButton" Content="Receiever" Grid.Row="6"  FontSize="12" Background="LightBlue" BorderBrush="White" HorizontalAlignment="Left" FontFamily="Constantia" FontWeight="Bold" Click="receiverButton_Click" Margin="0,36,0,36" Grid.RowSpan="3" Width="63">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10" />
                        </Style>
                    </Button.Resources>
                </Button>

                <TextBlock Name="packIdb" Text="{Binding Path=ParcelInTrans.Id}" Style="{StaticResource TextBlockStyle}" Grid.Column="1" Grid.Row="2"/>
                <TextBlock Name="packPriorb" Text="{Binding Path=ParcelInTrans.Priority, Mode=TwoWay}" Style="{StaticResource TextBlockStyle}" Grid.Column="1" Grid.Row="3"/>
                <TextBlock Name="packStatb" Text="{Binding Path=ParcelInTrans.Status, Mode=TwoWay}" Style="{StaticResource TextBlockStyle}" Grid.Column="1"  Grid.Row="4"/>
                <TextBlock Name="packdistance" Text="{Binding Path=ParcelInTrans.Distance, Mode=TwoWay}" Style="{StaticResource TextBlockStyle}" Grid.Column="1" Grid.Row="5"/>
            </Grid>

            <Grid x:Name="senderGrid" Grid.Column="8" Grid.RowSpan="10" Visibility="Hidden" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Name="sender" Text="Sender" Grid.Row="1" Grid.Column="0" FontFamily="Constantia" FontSize="25" FontWeight="Bold" HorizontalAlignment="Left" Grid.ColumnSpan="5"/>
                <TextBlock Name="senderId" Text="Id" Grid.Row="2" Grid.Column="0" FontSize="12" Style="{StaticResource TextBlockStyle}"/>
                <TextBlock Name="senderName" Text="Name:" Grid.Column="0" Grid.Row="3" Style="{StaticResource TextBlockStyle}" FontSize="12" />
                <TextBlock Name="senderLongitude" Text="Longitude:" Grid.Column="0" Grid.Row="4" Style="{StaticResource TextBlockStyle}" FontSize="12" Height="24" VerticalAlignment="Top"/>
                <TextBlock Name="senderLatitude" Text="Latitude:" Grid.Column="0" Grid.Row="5" Style="{StaticResource TextBlockStyle}" FontSize="12" Height="24" VerticalAlignment="Top"/>

                <TextBlock Name="senderIdb" Text="{Binding ParcelInTrans.Sender.Id}" Grid.Row="2" Grid.Column="1" FontSize="12" Style="{StaticResource TextBlockStyle}"/>
                <TextBlock Name="senderNameb" Text="{Binding ParcelInTrans.Sender.Name}" Grid.Column="1" Grid.Row="3" Style="{StaticResource TextBlockStyle}" FontSize="12" />
                <TextBlock Name="senderLongitudeb" Text="{Binding ParcelInTrans.PickedUp.Longitude}" Grid.Column="1" Grid.Row="4" Style="{StaticResource TextBlockStyle}" FontSize="12" Height="39" VerticalAlignment="Center" Grid.ColumnSpan="2"/>
                <TextBlock Name="senderLatitudeb" Text="{Binding ParcelInTrans.PickedUp.Latitude}" Grid.Column="1" Grid.Row="5" Style="{StaticResource TextBlockStyle}" FontSize="12" Height="39" VerticalAlignment="Center" Grid.ColumnSpan="2"/>
            </Grid>

            <Grid x:Name="receiverGrid" Grid.Column="8" Grid.Row="3" Grid.RowSpan="8" Visibility="Hidden" Grid.ColumnSpan="2" Margin="0,39,0,39">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Name="Receiver" Text="Receiver" Grid.Row="1" Grid.Column="0" FontFamily="Constantia" FontSize="25" FontWeight="Bold" HorizontalAlignment="Left" Grid.ColumnSpan="5"/>
                <TextBlock Name="ReceiverId" Text="Id" Grid.Row="2" Grid.Column="0" FontSize="12" Style="{StaticResource TextBlockStyle}"/>
                <TextBlock Name="ReceiverName" Text="Name:" Grid.Column="0" Grid.Row="3" Style="{StaticResource TextBlockStyle}" FontSize="12" />
                <TextBlock Name="ReceiverLongitude" Text="Latitude:" Grid.Column="0" Grid.Row="4" Style="{StaticResource TextBlockStyle}" FontSize="12" Height="24" VerticalAlignment="Top"/>
                <TextBlock Name="ReceiverLatitude" Text="Latitude:" Grid.Column="0" Grid.Row="5" Style="{StaticResource TextBlockStyle}" FontSize="12" Height="24" VerticalAlignment="Top"/>

                <TextBlock Name="receiverIdb" Text="{Binding ParcelInTrans.Receiver.Id}" Grid.Row="2" Grid.Column="1" FontSize="12" Style="{StaticResource TextBlockStyle}"/>
                <TextBlock Name="receiverNameb" Text="{Binding ParcelInTrans.Receiver.Name}" Grid.Column="1" Grid.Row="3" Style="{StaticResource TextBlockStyle}" FontSize="12" />
                <TextBlock Name="receiverLongitudeb" Text="{Binding ParcelInTrans.DeliverdTo.Longitude}" Grid.Column="1" Grid.Row="3" Style="{StaticResource TextBlockStyle}" FontSize="12" Height="39" VerticalAlignment="Top" Grid.ColumnSpan="2" Margin="0,26,0,0" Grid.RowSpan="3"/>
                <TextBlock Name="receiverLatitudeb" Text="{Binding ParcelInTrans.DeliverdTo.Latitude}" Grid.Column="1" Grid.Row="5" Style="{StaticResource TextBlockStyle}" FontSize="12" Height="39" VerticalAlignment="Center" Grid.ColumnSpan="2"/>
            </Grid>



            <Label  x:Name="DroneLabel" Content="Update drone" FontSize="25" Grid.Column="0" 
                    FontWeight="Bold" Grid.ColumnSpan="10" Grid.RowSpan="1" Margin="0,0,0,16" Background="LightBlue"/>
            <TextBlock Name="idTb" Text="DroneId" HorizontalAlignment="Center" Style="{StaticResource TextBlockStyle}"
                   Grid.Column="0" Grid.Row="2" />
            <TextBlock Name="wTb" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Center" Style="{StaticResource TextBlockStyle}"
                    Text="WeightCategory"/>
            <TextBlock Name="mTb" Grid.Row="4" Grid.Column="0" HorizontalAlignment="Center" Style="{StaticResource TextBlockStyle}"
                    Text="Model"/>
            <TextBlock Name="statTb" Grid.Row="5" Grid.Column="0" HorizontalAlignment="Center" Style="{StaticResource TextBlockStyle}"
                    Text="Drone status"/>
            <TextBlock Name="lnTb" Grid.Row="6" HorizontalAlignment="Center" Style="{StaticResource TextBlockStyle}"
                    Text="Longitude" Grid.RowSpan="3"/>
            <TextBlock Name="ltTb" Grid.Row="7" Grid.Column="0" HorizontalAlignment="Center" Style="{StaticResource TextBlockStyle}"
                    Text="Latitude"/>
            <TextBlock Name="bTb" Grid.Row="8" Grid.Column="0" HorizontalAlignment="Center" Style="{StaticResource TextBlockStyle}"
                    Text="Battery"/>
            <Button Name="dTb" 
                    Grid.Row="9"
                    HorizontalAlignment="Center"
                    BorderBrush="White"
                    FontFamily="Constantia"
                    FontWeight="Bold"
                    FontSize="14"
                    Content="Parcel" 
                    Background="LightBlue" 
                    Click="dTb_Click" Margin="0,0,0,36" Grid.RowSpan="2" Width="56">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="10" />
                    </Style>
                </Button.Resources>
            </Button>
            <TextBox  Width="250" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="addMinutestxt" Margin="0,32,0,10"  Grid.Row="0" Grid.Column="2"  Style="{StaticResource AddminutesEnable}" />
            <TextBlock IsHitTestVisible="False" Text="Amount of minutes it charged" HorizontalAlignment="Center" Margin="0,32,0,10" Foreground="DarkGray" Grid.Row="0" Grid.Column="2" Width="180" >
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=addMinutestxt}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Name="DroneDisplay" Text="Drone" Grid.Row="1" Grid.Column="0" FontFamily="Constantia" FontSize="25" FontWeight="Bold" HorizontalAlignment="Center"/>
            <TextBlock Name="idTx" Text="{Binding Id, Mode=TwoWay}"  Grid.Row="2" Grid.Column="1" Style="{StaticResource TextBlockStyle}"/>
            <TextBlock Name="wCb" Text="{Binding Path=Weight, Mode=TwoWay}" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" Style="{StaticResource TextBlockStyle}" />
            <TextBox Name="mTx" Grid.Row="4" Text="{Binding Model}" Grid.Column="1" Style="{StaticResource textboxStyle}"/>
            <TextBlock Name="statCb" Grid.Row="5" Grid.Column="1" Text="{Binding Status}" Grid.ColumnSpan="3"   HorizontalAlignment="Left" Style="{StaticResource TextBlockStyle}" />
            <TextBlock Name="lnTx" Grid.Row="6" Text="{Binding Path=Loc.Longitude}" Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource TextBlockStyle}" />
            <TextBlock Name="ltTx" Grid.Row="7" Text="{Binding Path=Loc.Latitude}" Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource TextBlockStyle}" />
            <TextBlock Name="bTx" Grid.Row="8" Text="{Binding Path=Battery}" Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource TextBlockStyle}" />
            <ComboBox Name="ComboUpdateOption" Text="Choose update Option" ToolTip="Choose UpdateOption" SelectedItem="{Binding UpdateOptions}" Grid.Row="0" Grid.Column="2"  SelectionChanged="UpdateOption_SelectionChanged" Margin="0,10,10,38"/>
            <Button Name="submit" 
                Grid.Row="9"
                Grid.Column="3"
                Click="submit_Click" 
                Content="Update"
                Style="{StaticResource ButtonEnable}"  Grid.ColumnSpan="2" Grid.RowSpan="2" Margin="0,0,10,36">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5" />
                    </Style>
                </Button.Resources>
            </Button>
            <Button Name="cancel" 
                 Content="Cancel"
                IsCancel="True"
                Grid.Row="9" 
                Grid.Column="5" 
                 Click="cancel_Click" Grid.RowSpan="2" Grid.ColumnSpan="2" Margin="10,0,0,36" >
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>

    </Grid>
</local:CustomWindow>